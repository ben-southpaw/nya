@use 'sass:math';

// Colors

// Typography
$font-family: 'Mercator', sans-serif;

@font-face {
	font-family: 'Mercator';
	src: url('/fonts/MercatorNieuwTest-ExtraLightItalic.otf') format('opentype');
	font-weight: lighter;
	font-style: italic;
}

@font-face {
	font-family: 'Mercator';
	src: url('/fonts/MercatorNieuwTest-Regular.otf') format('opentype');
	font-weight: 500;
	font-style: normal;
}

@font-face {
	font-family: 'Mercator';
	src: url('/fonts/MercatorNieuwTest-HeavyItalic.otf') format('opentype');
	font-weight: bold;
	font-style: italic;
}

@font-face {
	font-family: 'Mercator';
	src: url('/fonts/MercatorNieuwTest-Light.otf') format('opentype');
	font-weight: normal;
	font-style: normal;
}

// Spacing

// Breakpoints
$breakpoint-mobile: 480px;
$breakpoint-tablet: 768px;
$breakpoint-desktop: 1024px;

$breakpoint-small: '(max-width: 899px)';
$breakpoint-large: 1440px;
$breakpoint-xlarge: 1800px;
$screen-width: 100vw;

// Other
$base-unit: 1vw;
$transition-duration: 1s;

@mixin mobile {
	@media (max-width: #{$breakpoint-mobile}) {
		@content;
	}
}

@mixin tablet {
	@media (min-width: #{$breakpoint-mobile + 1}) and (max-width: #{$breakpoint-tablet - 1}) {
		@content;
	}
}

@mixin desktop {
	@media (min-width: #{$breakpoint-tablet}) {
		@content;
	}
}

@mixin large {
	@media (min-width: #{$breakpoint-large}) {
		@content;
	}
}

@mixin responsive-scale-single-direction(
	$scale-min,
	$scale-max,
	$screen-min,
	$screen-max,
	$limit-scale: true,
	$vertical: false
) {
	$unit: if($vertical, 1vh, 1vw);
	$min-unit: if($vertical, 'min-height', 'min-width');

	--scale: #{$scale-min}px;
	min-height: $unit * 0;

	@media only screen and ($min-unit: calc($screen-min * 1px)) {
		--scale: calc(
			#{$scale-min}px + #{$scale-max - $scale-min} * (
					#{$unit * 100} - #{$screen-min}px
				) / #{$screen-max - $screen-min}
		);
	}

	@if ($limit-scale) {
		@media only screen and ($min-unit: calc($screen-max * 1px)) {
			--scale: #{$scale-max}px;
		}
	}
}

@mixin responsive-scale(
	$screen-min,
	$screen-max,
	$direction: 'both',
	$scale-min: calc($screen-min / $screen-max),
	$scale-max: 1,
	$limit-scale: true,
	$aspect-ratio: calc(1440 / 1024)
) {
	@include responsive-scale-single-direction(
		$scale-min,
		$scale-max,
		$screen-min,
		$screen-max,
		$limit-scale,
		$direction == 'vertical'
	);

	@if ($direction == 'both') {
		@media only screen and (min-aspect-ratio: calc(math.round($aspect-ratio * 100) / 100)) {
			@include responsive-scale-single-direction(
				$scale-min,
				$scale-max,
				math.div($screen-min, $aspect-ratio),
				math.div($screen-max, $aspect-ratio),
				$limit-scale,
				true
			);
		}
	}
}

@function ui($amount) {
	@return calc(#{$amount} * var(--scale));
}
